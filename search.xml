<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[玩转Bootstrap]]></title>
      <url>http://yoursite.com/2016/07/09/x6/</url>
      <content type="html"><![CDATA[<h2 id="Bootstrap到底是什么？"><a href="#Bootstrap到底是什么？" class="headerlink" title="Bootstrap到底是什么？"></a>Bootstrap到底是什么？</h2><p>2011年，twitter的“一小撮”工程师为了提高他们内部的分析和管理能力，用业余时间为他们的产品构建了一套易用、优雅、灵活、可扩展的前端工具集–BootStrap。Bootstrap由MARK OTTO和Jacob Thornton所设计和建立，在github上开源之后，迅速成为该站上最多人watch&amp;fork的项目。大量工程师踊跃为该项目贡献代码，社区惊人地活跃，代码版本进化非常快速，官方文档质量极其高(可以说是优雅)，同时涌现了许多基于Bootstrap建设的网站：界面清新、简洁;要素排版利落大方。</p>
<h3 id="GitHub上这样介绍-bootstrap"><a href="#GitHub上这样介绍-bootstrap" class="headerlink" title="GitHub上这样介绍 bootstrap"></a>GitHub上这样介绍 bootstrap</h3><ul>
<li>简单灵活可用于架构流行的用户界面和交互接口的html、css、javascript工具集。</li>
<li>基于html5、css3的bootstrap，具有大量的诱人特性：友好的学习曲线，卓越的兼容性，响应式设计，12列格网，样式向导文档。</li>
<li>自定义JQuery插件，完整的类库，基于Less等。</li>
</ul>
<h2 id="全局样式"><a href="#全局样式" class="headerlink" title="全局样式"></a>全局样式</h2><p>在制作Web页面时，前端人员都习惯为网站设置一个全局样式（reset.css）。那么在Bootstrap框架中也不例外。Bootstrap框架的核心是轻量的CSS基础代码库，他并没有一味的重置样式，而是注重各浏览器基础表现，降低开发难度。大部分前端人员都具有归零的思想，但实际你会发现，归零之后的样式在开发过程中会存在着潜在的问题，例如，在全局样式表中将em变成一个普通标记，明明应该是斜体，怎么就没效果了呢？</p>
<p>Bootstrap框架在这一部分做了一定的变更，不再一味追求归零，而是更注重重置可能产生问题的样式（如，body,form的margin等），保留和坚持部分浏览器的基础样式，解决部分潜在的问题，提升一些细节的体验，具体说明如下：</p>
<pre><code>移除body的margin声明
设置body的背景色为白色
为排版设置了基本的字体、字号和行高
设置全局链接颜色，且当链接处于悬浮“:hover”状态时才会显示下划线样式
</code></pre><p>其实Bootstrap的全局样式采用了“normalize.css”，但并没有一味的全部使用此重置样式，而是在此基础上进行了一些改良，让其更适合Bootstrap的设计思想。</p>
<p>你可以通过“normalize.less”（LESS版本）或“_normalize.scss”（Sass版本）进行深入的了解。</p>
<h3 id="可以在github页面中的setting项里的GitHub-Pages选择默认的Launch创建即可"><a href="#可以在github页面中的setting项里的GitHub-Pages选择默认的Launch创建即可" class="headerlink" title="可以在github页面中的setting项里的GitHub Pages选择默认的Launch创建即可"></a>可以在github页面中的setting项里的GitHub Pages选择默认的Launch创建即可</h3><h3 id="也可以创建gh-pages的分支"><a href="#也可以创建gh-pages的分支" class="headerlink" title="也可以创建gh-pages的分支"></a>也可以创建gh-pages的分支</h3><p>在上述gh-pages里的分支修改代码发布即可</p>
<h2 id="github扩展"><a href="#github扩展" class="headerlink" title="github扩展"></a>github扩展</h2><p><a href="http://getbootstrap.com/" target="_blank" rel="external">bootstrap官网</a><br><a href="http://www.imooc.com/learn/141" target="_blank" rel="external">玩转Bootstrap（基础）</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github静态页面创建]]></title>
      <url>http://yoursite.com/2016/07/05/x5/</url>
      <content type="html"><![CDATA[<h2 id="github静态页面创建"><a href="#github静态页面创建" class="headerlink" title="github静态页面创建"></a>github静态页面创建</h2><p>一般采用的有下面4种方法</p>
<h3 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h3><p>markdown静态文件生成</p>
<h3 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h3><p>PHP动态解析</p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>node-js编译</p>
<h3 id="gh-pages"><a href="#gh-pages" class="headerlink" title="gh-pages"></a>gh-pages</h3><p>github分支</p>
<h2 id="如何使用gh-pages创建页面"><a href="#如何使用gh-pages创建页面" class="headerlink" title="如何使用gh-pages创建页面"></a>如何使用gh-pages创建页面</h2><h3 id="可以在github页面中的setting项里的GitHub-Pages选择默认的Launch创建即可"><a href="#可以在github页面中的setting项里的GitHub-Pages选择默认的Launch创建即可" class="headerlink" title="可以在github页面中的setting项里的GitHub Pages选择默认的Launch创建即可"></a>可以在github页面中的setting项里的GitHub Pages选择默认的Launch创建即可</h3><h3 id="也可以创建gh-pages的分支"><a href="#也可以创建gh-pages的分支" class="headerlink" title="也可以创建gh-pages的分支"></a>也可以创建gh-pages的分支</h3><p>在上述gh-pages里的分支修改代码发布即可</p>
<h2 id="github扩展"><a href="#github扩展" class="headerlink" title="github扩展"></a>github扩展</h2><p><a href="http://www.imooc.com/learn/390" target="_blank" rel="external">搬进github</a><br><a href="http://justcoding.iteye.com/blog/1959737" target="_blank" rel="external">使用Jekyll搭建bok</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Github入门]]></title>
      <url>http://yoursite.com/2016/07/05/x4/</url>
      <content type="html"><![CDATA[<h2 id="初识Github"><a href="#初识Github" class="headerlink" title="初识Github"></a>初识Github</h2><p>GitHub可以托管各种git库，并提供一个web界面，但与其它像 SourceForge或Google Code这样的服务不同，GitHub的独特卖点在于从另外一个项目进行分支的简易性。为一个项目贡献代码非常简单：首先点击项目站点的“fork”的按钮，然后将代码检出并将修改加入到刚才分出的代码库中，最后通过内建的“pull request”机制向项目负责人申请代码合并。已经有人将GitHub称为代码玩家的MySpace。<br>在GitHub进行分支就像在Myspace（或Facebook…）进行交友一样，在社会关系图的节点中不断的连线。<br>GitHub 使用 git 分布式版本控制系统，而 git 最初是 Linus Torvalds 为帮助Linux开发而创造的，它针对的是 Linux 平台，因此 git 和 Windows 从来不是最好的朋友，因为它一点也不像 Windows。GitHub 发布了GitHub for Windows，为 Windows 平台开发者提供了一个易于使用的 Git 图形客户端。</p>
<h3 id="GitHub-For-Windows"><a href="#GitHub-For-Windows" class="headerlink" title="GitHub For Windows"></a>GitHub For Windows</h3><p>GitHub for Windows 是一个 Metro 风格应用程序，集成了自包含版本的 Git，bash 命令行 shell，PowerShell 的 posh-git 扩展。GitHub 为 Windows 用户提供了一个基本的图形前端去处理大部分常用版本控制任务，可以创建版本库，向本地版本库递交补丁，在本地和远程版本库之间同步。微软也通过CodePlex向开发者提供 git 版本控制系统，而 GitHub 创造了一个更具有吸引力的 Windows 版本。</p>
<p>GitHub上已自动配置的Mac笔记本电脑，一个工具，可以转换设置Linux或Windows机器。</p>
<p>BOXEN是GitHub的自动化工具，设置和配置的Mac笔记本电脑软件开发[3]或其他类型的工作，正在使用他们的开发人员，律师，设计师，付货人，等。我们的想法是准备系统以自动方式和作为无差错尽可能用最少的干预工作。根据GitHub上，与一个新的开发机器上，他的Mac系统成立，并准备在30分钟内提交代码。</p>
<p>BOXEN的基础上收集了大量的几十个木偶模块，使设置的各种软件，如卡桑德拉，MongoDB中，Java软件中，Python和Ruby开发中，节点，JS，nginx的，Skype公司，甚至MINECRAFT。虽然机器上配备了一个预配置，每个用户都可以调整它的配置应有的作用。</p>
<h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="注册账户以及创建仓库"><a href="#注册账户以及创建仓库" class="headerlink" title="注册账户以及创建仓库"></a>注册账户以及创建仓库</h3><p>要想使用github第一步当然是注册github账号了。之后就可以创建仓库了（免费用户只能建公共仓库），Create a New Repository，填好名称后Create，之后会出现一些仓库的配置信息，这也是一个git的简单教程。</p>
<h3 id="安装客户端msysgit"><a href="#安装客户端msysgit" class="headerlink" title="安装客户端msysgit"></a>安装客户端msysgit</h3><p>github是服务端，要想在自己电脑上使用git我们还需要一个git客户端，我这里选用msysgit，这个只是提供了git的核心功能，而且是基于命令行的。如果想要图形界面的话只要在msysgit的基础上安装TortoiseGit即可。</p>
<p>装完msysgit后右键鼠标会多出一些选项来，在本地仓库里右键选择Git Init Here，会多出来一个.git文件夹，这就表示本地git创建成功。右键Git Bash进入git命令行，为了把本地的仓库传到github，还需要配置ssh key。</p>
<h3 id="配置Git"><a href="#配置Git" class="headerlink" title="配置Git"></a>配置Git</h3><p>首先在本地创建ssh key；<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure></p>
<p>后面的your_email@youremail.com改为你的邮箱，之后会要求确认路径和输入密码，我们这使用默认的一路回车就行。成功的话会在~/下生成.ssh文件夹，进去，打开id_rsa.pub，复制里面的key。</p>
<p>回到github，进入Account Settings，左边选择SSH Keys，Add SSH Key,title随便填，粘贴key。为了验证是否成功，在git bash下输入：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated, but GitHub does not provide shell access 。这就表示已成功连上github。</p>
<p>接下来我们要做的就是把本地仓库传到github上去，在此之前还需要设置username和email，因为github每次commit都会记录他们。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name <span class="string">"your name"</span></div><div class="line">$ git config --global user.email <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure></p>
<p>进入要上传的仓库，右键git bash，添加远程地址：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git remote add origin git@github.com:yourName/yourRepo.git</div></pre></td></tr></table></figure></p>
<p>后面的yourName和yourRepo表示你再github的用户名和刚才新建的仓库，加完之后进入.git，打开config，这里会多出一个remote “origin”内容，这就是刚才添加的远程地址，也可以直接修改config来配置远程地址。</p>
<h3 id="提交、上传"><a href="#提交、上传" class="headerlink" title="提交、上传"></a>提交、上传</h3><p>接下来在本地仓库里添加一些文件，比如README，<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add README</div><div class="line">$ git commit -m <span class="string">"first commit"</span></div></pre></td></tr></table></figure></p>
<p>上传到github：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push origin master</div></pre></td></tr></table></figure></p>
<p>git push命令会将本地仓库推送到远程服务器。<br>git pull命令则相反。</p>
<p>修改完代码后，使用git status可以查看文件的差别，使用git add 添加要commit的文件，也可以用git add -i来智能添加文件。之后git commit提交本次修改，git push上传到github。</p>
<h2 id="github扩展"><a href="#github扩展" class="headerlink" title="github扩展"></a>github扩展</h2><p><a href="http://www.imooc.com/learn/390" target="_blank" rel="external">搬进github</a><br><a href="http://www.yangzhiping.com/tech/github.html" target="_blank" rel="external">如何高效利用GitHub</a><br><a href="http://github.phodal.com/" target="_blank" rel="external">GitHub 漫游指南</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Git的安装及使用技巧]]></title>
      <url>http://yoursite.com/2016/07/04/x3/</url>
      <content type="html"><![CDATA[<h2 id="SVN与Git的最主要的区别"><a href="#SVN与Git的最主要的区别" class="headerlink" title="SVN与Git的最主要的区别"></a>SVN与Git的最主要的区别</h2><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。</p>
<p>Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p>
<h2 id="Git搭建和使用"><a href="#Git搭建和使用" class="headerlink" title="Git搭建和使用"></a>Git搭建和使用</h2><h3 id="Git服务端"><a href="#Git服务端" class="headerlink" title="Git服务端"></a>Git服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#安装git</span></div><div class="line">sudo apt-get install git</div><div class="line">yum install git</div><div class="line"></div><div class="line"><span class="comment">#创建一个git用户，用来运行git服务</span></div><div class="line">sudo adduser git</div><div class="line"></div><div class="line"><span class="comment">#创建证书使用公钥免密码登录(可选)</span></div><div class="line">ssh-keygen -t rsa</div><div class="line">vi ~/.ssh/authorized_keys</div><div class="line"></div><div class="line"><span class="comment">#初始化Git仓库</span></div><div class="line">sudo git init --bare sample.git</div><div class="line">sudo chown -R git:git sample.git</div><div class="line"></div><div class="line"><span class="comment">#禁用shell登录</span></div><div class="line">vi /etc/passwd</div><div class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</div><div class="line"></div><div class="line"><span class="comment">#在客户端上克隆远程仓库</span></div><div class="line">git <span class="built_in">clone</span> git@server:/srv/sample.git</div></pre></td></tr></table></figure>
<p>管理公钥推荐使用Gitosis<br>Gitosis - <a href="https://github.com/res0nat0r/gitosis" target="_blank" rel="external">GitHub - res0nat0r/gitosis: Manage git repositories, provide access to them over SSH, with tight access control and not needing shell accounts.</a><br>Gitosis配置手记 - <a href="http://debugo.com/gitosis/" target="_blank" rel="external">http://debugo.com/gitosis/</a><br>管理权限推荐使用Gitolite<br>Gitolite - <a href="https://github.com/sitaramc/gitolite" target="_blank" rel="external">GitHub - sitaramc/gitolite: Hosting git repositories – Gitolite allows you to setup git hosting on a central server, with very fine-grained access control and many (many!) more powerful features</a></p>
<h3 id="Git客服端"><a href="#Git客服端" class="headerlink" title="Git客服端"></a>Git客服端</h3><blockquote>
<p>Git客户端可以按个人习惯来选择，遵守团队协作中的Git规范标准才是更重要的</p>
</blockquote>
<p><a href="https://git-scm.com/" target="_blank" rel="external">Git</a><br><a href="https://tortoisegit.org/" target="_blank" rel="external">TortoiseGit</a></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#以最基本的Git命令行为例，先下载Git</span></div><div class="line">https://git-scm.com/download/</div><div class="line"></div><div class="line"><span class="comment">#配置git提交用户名和邮箱，定义别名方便区分</span></div><div class="line">git config --global user.name <span class="string">"你的姓名"</span></div><div class="line">git config --global user.email <span class="string">"you@example.com"</span></div><div class="line"></div><div class="line"><span class="comment">#克隆仓库</span></div><div class="line">git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</div><div class="line"></div><div class="line">$ git <span class="built_in">clone</span> <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</div><div class="line">Cloning into <span class="string">'cap'</span>...</div><div class="line">warning: You appear to have cloned an empty repository.</div><div class="line">Checking connectivity... done.</div><div class="line"></div><div class="line"><span class="comment">#测试推送</span></div><div class="line">touch README</div><div class="line">git add README</div><div class="line">git commit -m <span class="string">"add readme"</span></div><div class="line">git push origin master</div><div class="line"></div><div class="line">Counting objects: 3, done.</div><div class="line">Writing objects: 100% (3/3), 199 bytes | 0 bytes/s, done.</div><div class="line">Total 3 (delta 0), reused 0 (delta 0)</div><div class="line">To <span class="built_in">cap</span>@172.28.70.243:/<span class="built_in">cap</span>/cap.git</div><div class="line">* [new branch] master -&gt; master</div></pre></td></tr></table></figure>
<h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><p><strong>符号约定</strong></p>
<ul>
<li><code>&lt;xxx&gt;</code> 自定义内容</li>
<li><code>[xxx]</code> 可选内容</li>
<li><code>[&lt;xxx&gt;]</code>自定义可选内容</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始设置</span></div><div class="line">git config --global user.name <span class="string">"&lt;用户名&gt;"</span> <span class="comment">#设置用户名</span></div><div class="line">git config --global user.email <span class="string">"&lt;电子邮件&gt;"</span> <span class="comment">#设置电子邮件</span></div><div class="line"></div><div class="line"><span class="comment">#本地操作</span></div><div class="line">git add [-i] <span class="comment">#保存更新，-i为逐个确认。</span></div><div class="line">git status <span class="comment">#检查更新。</span></div><div class="line">git commit [<span class="_">-a</span>] -m <span class="string">"&lt;更新说明&gt;"</span> <span class="comment">#提交更新，-a为包含内容修改和增删，-m为说明信息，也可以使用 -am。</span></div><div class="line"></div><div class="line"><span class="comment">#远端操作</span></div><div class="line">git <span class="built_in">clone</span> &lt;git地址&gt; <span class="comment">#克隆到本地。</span></div><div class="line">git fetch <span class="comment">#远端抓取。</span></div><div class="line">git merge <span class="comment">#与本地当前分支合并。</span></div><div class="line">git pull [&lt;远端别名&gt;] [&lt;远端branch&gt;] <span class="comment">#抓取并合并,相当于第2、3步</span></div><div class="line">git push [<span class="_">-f</span>] [&lt;远端别名&gt;] [&lt;远端branch&gt;] <span class="comment">#推送到远端，-f为强制覆盖</span></div><div class="line">git remote add &lt;别名&gt; &lt;git地址&gt; <span class="comment">#设置远端别名</span></div><div class="line">git remote [-v] <span class="comment">#列出远端，-v为详细信息</span></div><div class="line">git remote show &lt;远端别名&gt; <span class="comment">#查看远端信息</span></div><div class="line">git remote rename &lt;远端别名&gt; &lt;新远端别名&gt; <span class="comment">#重命名远端</span></div><div class="line">git remote rm &lt;远端别名&gt; <span class="comment">#删除远端</span></div><div class="line">git remote update [&lt;远端别名&gt;] <span class="comment">#更新分支列表</span></div><div class="line"></div><div class="line"><span class="comment">#分支相关</span></div><div class="line">git branch [-r] [<span class="_">-a</span>] <span class="comment">#列出分支，-r远端 ,-a全部</span></div><div class="line">git branch &lt;分支名&gt; <span class="comment">#新建分支</span></div><div class="line">git branch -b &lt;分支名&gt; <span class="comment">#新建并切换分支</span></div><div class="line">git branch <span class="_">-d</span> &lt;分支名&gt; <span class="comment">#删除分支</span></div><div class="line">git checkout &lt;分支名&gt; <span class="comment">#切换到分支</span></div><div class="line">git checkout -b &lt;本地branch&gt; [-t &lt;远端别名&gt;/&lt;远端分支&gt;] <span class="comment">#-b新建本地分支并切换到分支, -t绑定远端分支</span></div><div class="line">git merge &lt;分支名&gt; <span class="comment">#合并某分支到当前分支</span></div></pre></td></tr></table></figure>
<p>Git常用命令 - <a href="http://gityuan.com/2015/06/27/git-notes/" target="_blank" rel="external">http://gityuan.com/2015/06/27/git-notes/</a></p>
<ul>
<li>workspace: 本地的工作目录。（记作A）</li>
<li>index：缓存区域，临时保存本地改动。（记作B）</li>
<li>local repository: 本地仓库，只想最后一次提交HEAD。（记作C）</li>
<li>remote repository：远程仓库。（记作D）</li>
</ul>
<blockquote>
<p>以下所有的命令的功能说明，都采用上述的标记的A、B、C、D的方式来阐述。</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#初始化</span></div><div class="line">git init //创建</div><div class="line">git <span class="built_in">clone</span> /path/to/repository //检出</div><div class="line">git config --global user.email <span class="string">"you@example.com"</span> //配置email</div><div class="line">git config --global user.name <span class="string">"Name"</span> //配置用户名</div><div class="line"></div><div class="line"><span class="comment">#操作</span></div><div class="line">git add &lt;file&gt; // 文件添加，A → B</div><div class="line">git add . // 所有文件添加，A → B</div><div class="line"></div><div class="line">git commit -m <span class="string">"代码提交信息"</span> //文件提交，B → C</div><div class="line">git commit --amend //与上次commit合并, *B → C</div><div class="line"></div><div class="line">git push origin master //推送至master分支, C → D</div><div class="line">git pull //更新本地仓库至最新改动， D → A</div><div class="line">git fetch //抓取远程仓库更新， D → C</div><div class="line"></div><div class="line">git <span class="built_in">log</span> //查看提交记录</div><div class="line">git status //查看修改状态</div><div class="line">git diff//查看详细修改内容</div><div class="line">git show//显示某次提交的内容</div><div class="line"></div><div class="line"><span class="comment">#撤销操作</span></div><div class="line">git reset &lt;file&gt;//某个文件索引会回滚到最后一次提交， C → B</div><div class="line">git reset//索引会回滚到最后一次提交， C → B</div><div class="line">git reset --hard // 索引会回滚到最后一次提交， C → B → A</div><div class="line"></div><div class="line">git checkout // 从index复制到workspace， B → A</div><div class="line">git checkout -- files // 文件从index复制到workspace， B → A</div><div class="line">git checkout HEAD -- files // 文件从<span class="built_in">local</span> repository复制到workspace， C → A</div><div class="line"></div><div class="line"><span class="comment">#分支相关</span></div><div class="line">git checkout -b branch_name //创建名叫“branch_name”的分支，并切换过去</div><div class="line">git checkout master //切换回主分支</div><div class="line">git branch <span class="_">-d</span> branch_name // 删除名叫“branch_name”的分支</div><div class="line">git push origin branch_name //推送分支到远端仓库</div><div class="line">git merge branch_name // 合并分支branch_name到当前分支(如master)</div><div class="line">git rebase //衍合，线性化的自动， D → A</div><div class="line"></div><div class="line"><span class="comment">#冲突处理</span></div><div class="line">git diff //对比workspace与index</div><div class="line">git diff HEAD //对于workspace与最后一次commit</div><div class="line">git diff &lt;<span class="built_in">source</span>_branch&gt; &lt;target_branch&gt; //对比差异</div><div class="line">git add &lt;filename&gt; //修改完冲突，需要add以标记合并成功</div><div class="line"></div><div class="line"><span class="comment">#其他</span></div><div class="line">gitk //开灯图形化git</div><div class="line">git config color.ui <span class="literal">true</span> //彩色的 git 输出</div><div class="line">git config format.pretty oneline //显示历史记录时，每个提交的信息只显示一行</div><div class="line">git add -i //交互式添加文件到暂存区</div></pre></td></tr></table></figure>
<h2 id="Git使用规范"><a href="#Git使用规范" class="headerlink" title="Git使用规范"></a>Git使用规范</h2><p>Git 使用规范流程 - Git 使用规范流程<br>团队中的 Git 实践 - <a href="https://ourai.ws/posts/working-with-git-in-team/" target="_blank" rel="external">https://ourai.ws/posts/working-with-git-in-team/</a><br>构家网 git 团队协作使用规范 v2 - <a href="http://wenku.baidu.com/view/e1430d1b7f1922791788e81e" target="_blank" rel="external">http://wenku.baidu.com/view/e1430d1b7f1922791788e81e</a></p>
<blockquote>
<p>Git使用规范提醒</p>
</blockquote>
<ul>
<li>使用Git过程中，必须通过创建分支进行开发，坚决禁止在主干分支上直接开发。review的同事有责任检查其他同事是否遵循分支规范。</li>
<li>在Git中，默认是不会提交空目录的，如果想提交某个空目录到版本库中，需要在该目录下新建一个 .gitignore 的空白文件，就可以提交了</li>
<li>把外部文件纳入到自己的 Git 分支来的时候一定要记得是先比对，确认所有修改都是自己修改的，然后再纳入。不然，容易出现代码回溯</li>
<li>多人协作时，不要各自在自己的 Git 分支开发，然后发文件合并。正确的方法应该是开一个远程分支，然后一起在远程分支里协作。不然，容易出现代码回溯（即别人的代码被覆盖的情况）</li>
<li>每个人提交代码是一定要 git diff 看提交的东西是不是都是自己修改的。如果有不是自己修改的内容，很可能就是代码回溯</li>
<li>review 代码的时候如果看到有被删除掉的代码，一定要确实是否是写代码的同事自己删除的。如果不是，很可能就是代码回溯<h2 id="Git扩展阅读"><a href="#Git扩展阅读" class="headerlink" title="Git扩展阅读"></a>Git扩展阅读</h2><a href="http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000" target="_blank" rel="external">Git教程</a><br><a href="https://www.zhihu.com/question/20401926/answer/97256184" target="_blank" rel="external">知乎的回答</a></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Windows下使用hexo在github上创建博客]]></title>
      <url>http://yoursite.com/2016/07/04/x2/</url>
      <content type="html"><![CDATA[<h2 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h2><p>Hexo 是一个简单地、轻量地、基于Node的一个静态博客框架。通过Hexo我们可以快速创建自己的博客，仅需要几条命令就可以完成。<br>发布时，Hexo可以部署在自己的Node服务器上面，也可以部署github上面。对于个人用户来说，部署在github上好处颇多，不仅可以省去服务器的成本，还可以减少各种系统运维的麻烦事(系统管理、备份、网络)。所以，基于github的个人站点，正在开始流行起来….<br>Hexo的官方网站：<a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io/</a> ，也是基于Github构建的网站。</p>
<h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><p>系统环境：</p>
<p><ul></ul></p>
<p><li>Win10 64bit</li></p>
<p><li>node v4.4.7</li></p>
<p><li>npm 2.15.8</li></p>
<p><li>Git Bash||Git Shell</li><br><br>使用Git安装Hexo，要用全局安装，加-g参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure></p>
<p>查看hexo的版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo version</div></pre></td></tr></table></figure>
<p>安装好后，我们就可以使用Hexo创建项目了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init blog</div></pre></td></tr></table></figure>
<p>进入目录，并启动Hexo服务器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd blog</div><div class="line">hexo server</div></pre></td></tr></table></figure></p>
<p>我们看到当前在目录下，出现了一个文件夹，包括初始化的文件。<br>这时端口4000被打开了，我们能过浏览器打开地址，<a href="http://localhost:4000/" target="_blank" rel="external">http://localhost:4000/</a> 。<br>停止调试后即可发布！</p>
<h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><h3 id="创建静态文件"><a href="#创建静态文件" class="headerlink" title="创建静态文件"></a>创建静态文件</h3><p>hexo的静态博客框架博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。<br>安装hexo-deployer-git。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>静态化命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo generate</div></pre></td></tr></table></figure></p>
<h3 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h3><p>我们把这个博客发布到github。<br>在github中创建一个项目youngrivers.github.io，项目地址：<a href="https://github.com/youngrivers/youngrivers.github.io" target="_blank" rel="external">https://github.com/youngrivers/youngrivers.github.io</a><br>编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。<br>首先要确定_config.yml的deploy:后面有一个空格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com/youngrivers/youngrivers.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。<br>然后，通过命令进行部署。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>这时我们的博客就创建好了</p>
<h2 id="hexo帮助文档"><a href="#hexo帮助文档" class="headerlink" title="hexo帮助文档"></a>hexo帮助文档</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">npm install hexo -g #安装</div><div class="line">npm update hexo -g #升级</div><div class="line">hexo init #初始化</div><div class="line">hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。</div><div class="line">hexo server -s #静态模式</div><div class="line">hexo server -p 5000 #更改端口</div><div class="line">hexo server -i 192.168.1.1 #自定义 IP</div><div class="line">hexo clean #清除缓存 网页正常情况下可以忽略此条命令</div><div class="line">hexo generate #使用 Hexo 生成静态文件快速而且简单</div><div class="line">hexo generate --watch #监视文件变动</div><div class="line">hexo new &quot;文件名&quot; #新建md文件</div><div class="line">hexo new page pageName #新建一个题为“pageName”的页面</div><div class="line">hexo version #查看Hexo版本</div><div class="line">hexo g -d # 等价于 hexo generate --deploy ：生成静态文件并部署</div><div class="line">hexo s -d # 等价于 hexo deploy --generate ：开启预览并部署到Github</div><div class="line">npm uninstall hexo-cli -g #卸载Hexo</div></pre></td></tr></table></figure>
<h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h2><ol>
<li><p>标题设置（让字体变大，和word的标题意思一样）<br>在Markdown当中设置标题，有两种方式：<br>第一种：通过在文字下方添加“=”和“-”，他们分别表示一级标题和二级标题。<br>第二种：在文字开头加上 “#”，通过“#”数量表示几级标题。（一共只有1~6级标题，1级标题字体最大）</p>
</li>
<li><p>块注释（blockquote）<br>通过在文字开头添加“&gt;”表示块注释。（当&gt;和文字之间添加五个blank时，块注释的文字会有变化。）</p>
</li>
<li><p>斜体<br>将需要设置为斜体的文字两端使用1个“*”或者“_”夹起来</p>
</li>
<li><p>粗体<br>将需要设置为斜体的文字两端使用2个“*”或者“_”夹起来</p>
</li>
<li><p>无序列表<br>在文字开头添加(<em>, +, and -)实现无序列表。但是要注意在(</em>, +, and -)和文字之间需要添加空格。（建议：一个文档中只是用一种无序列表的表示方式）</p>
</li>
<li><p>有序列表<br>使用数字后面跟上句号。（还要有空格）</p>
</li>
<li><p>链接（Links）<br>Markdown中有两种方式，实现链接，分别为内联方式和引用方式。<br>内联方式：This is an <a href="http://example.com/" target="_blank" rel="external">example link</a>.<br>引用方式：<br>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.</p>
</li>
</ol>
<p>8.图片（Images）<br>图片的处理方式和链接的处理方式，非常的类似。<br>内联方式：<img src="/path/to/img.jpg" alt="alt text" title="Title"><br>引用方式：<br><img src="/path/to/img.jpg" alt="alt text" title="Title"></p>
<p>9.代码（HTML中所谓的Code）<br>实现方式有两种：<br>第一种：简单文字出现一个代码框。使用<code>&lt;blockquote&gt;</code>。（<code>不是单引号而是左上角的ESC下面~中的</code>）<br>第二种：大片文字需要实现代码框。使用Tab和四个空格。</p>
<p>10.脚注（footnote）<br>实现方式如下：<br>hello<a href="hi">^hello</a></p>
<p>11.下划线<br>在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">张丹</a><br><a href="https://github.com/hexojs/hexo/issues/1154" target="_blank" rel="external">Hexo3.0</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Yelee主题说明]]></title>
      <url>http://yoursite.com/2016/07/03/x1/</url>
      <content type="html"><![CDATA[<p align="center"><br>    <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank"><br>        <img src="http://moxfive.github.io/resources/yelee-mockup.jpg"><br>    </a><br></p>

<p>&emsp;&emsp;Theme <strong>Yelee</strong> relies on <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">Hexo-Theme-Yilia</a>, thanks for the author <a href="https://github.com/litten" target="_blank" rel="external">Litten</a>. Fix some bugs, change lots of styles, add several features. And then I made the theme. Yelee is mainly designed for fluent text reading. I change styles and add functions, meanwhile, try hard to keep this theme simple, stupid and clear. Theme DEMO: <a href="http://moxfive.xyz" target="_blank" rel="external">MOxFIVE’s Blog</a></p>
<p align="center"><br>    <img src="https://img.shields.io/badge/Hexo-v3.1%2B-blue.svg"><br>    <img src="https://img.shields.io/badge/IE-8%2B-red.svg"><br>    <a href="https://github.com/MOxFIVE/hexo-theme-yelee/releases" target="_blank"><br>        <img src="https://img.shields.io/github/release/MOxFIVE/hexo-theme-yelee.svg"><br>    </a><br></p>

<p align="center"><br>    <a href="http://moxfive.xyz" target="_blank"><br>        <img src="http://moxfive.github.io/resources/yelee-qrcode.png"><br>    </a><br></p>

<p></p><h3 align="center"><br>    <a href="http://MOxFIVE.coding.me/yelee" target="_blank"><br>        Yelee 主题使用说明 [简中]<br>    </a><br>    <br><br>    <a href="https://github.com/MOxFIVE/yelee" target="_blank"><br>        文档 GitHub 仓库<br>    </a><br></h3><p></p>
<h3 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/MOxFIVE/hexo-theme-yelee.git themes/yelee</div></pre></td></tr></table></figure>
<p>Change theme field in Hexo root’s _config.yml file.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">theme: yelee</div></pre></td></tr></table></figure>
<h3 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd themes/yelee</div><div class="line">git pull</div></pre></td></tr></table></figure>
<h3 id="New-Features-DEMO"><a href="#New-Features-DEMO" class="headerlink" title="New Features DEMO"></a>New Features <a href="http://moxfive.xyz/yelee/new-features.html" target="_blank" rel="external">DEMO</a></h3><table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th style="text-align:center">En</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td style="text-align:center">Flexible table of contents</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td style="text-align:center">Transparent &amp; Random background</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td style="text-align:center">Scrolling button</td>
</tr>
<tr>
<td style="text-align:center">4</td>
<td style="text-align:center">Copyright info.</td>
</tr>
<tr>
<td style="text-align:center">5</td>
<td style="text-align:center">Post navigation button</td>
</tr>
<tr>
<td style="text-align:center">6</td>
<td style="text-align:center">Site counter</td>
</tr>
<tr>
<td style="text-align:center">7</td>
<td style="text-align:center">i18n, multi-language</td>
</tr>
<tr>
<td style="text-align:center">8</td>
<td style="text-align:center">Local Site Search</td>
</tr>
<tr>
<td style="text-align:center">9</td>
<td style="text-align:center">Load Comment dynamically</td>
</tr>
</tbody>
</table>
<h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><h4 id="Internationalization"><a href="#Internationalization" class="headerlink" title="Internationalization"></a>Internationalization</h4><p>Use internationalization to present your site in different languages.</p>
<p><a href="https://hexo.io/docs/internationalization.html" target="_blank" rel="external">https://hexo.io/docs/internationalization.html</a></p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Hexo Configuration</span></div><div class="line"><span class="comment">## Docs: http://hexo.io/docs/configuration.html</span></div><div class="line"></div><div class="line"><span class="comment"># Site</span></div><div class="line"><span class="attr">language:</span> en</div></pre></td></tr></table></figure>
<h5 id="Available-Languages"><a href="#Available-Languages" class="headerlink" title="Available Languages"></a>Available Languages</h5><table>
<thead>
<tr>
<th>Code</th>
<th style="text-align:center">-</th>
<th style="text-align:center">-</th>
<th style="text-align:center">Contributor(s)</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>en</strong></td>
<td style="text-align:center">English</td>
<td style="text-align:center">英语</td>
<td style="text-align:center">MOxFIVE</td>
</tr>
<tr>
<td><strong>zh-Hans</strong></td>
<td style="text-align:center">Chinese (Simplified)</td>
<td style="text-align:center">大陆简体</td>
<td style="text-align:center">MOxFIVE</td>
</tr>
<tr>
<td><strong>zh-Hant-HK</strong></td>
<td style="text-align:center">Chinese (Traditional)</td>
<td style="text-align:center">港澳繁體</td>
<td style="text-align:center">MOxFIVE</td>
</tr>
<tr>
<td><strong>zh-Hant-TW</strong></td>
<td style="text-align:center">Chinese (Traditional)</td>
<td style="text-align:center">台灣正體</td>
<td style="text-align:center">MOxFIVE</td>
</tr>
</tbody>
</table>
<blockquote>
<p><strong>Any Contribution is Welcome！</strong></p>
</blockquote>
<h4 id="0-Post-Excerpt"><a href="#0-Post-Excerpt" class="headerlink" title="0. Post Excerpt"></a>0. Post Excerpt</h4><p>There are two ways to show excerpt in homepage.</p>
<ul>
<li>a: <a id="more"></a></li>
</ul>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">title: Hello World</div><div class="line">date: 2015-12-03 00:00:00</div><div class="line"><span class="comment">---</span></div><div class="line">&lt;Excerpt in index&gt;</div><div class="line"><span class="addition">+ &lt;!-- more --&gt;</span></div><div class="line">&lt;The rest of contents&gt;</div></pre></td></tr></table></figure>
<ul>
<li>b: description in Front-matter</li>
</ul>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: Hello World</div><div class="line">date: 2015-12-03 00:00:00</div><div class="line"><span class="addition">+ description: "Welcome to Hexo! This is your very first post."</span></div><div class="line"><span class="comment">---</span></div><div class="line">&lt;Contents&gt;</div></pre></td></tr></table></figure>
<blockquote>
<p>Description only support plain text</p>
<p>Set the value of description with quotes to avoid unexpected error <code>:</code></p>
</blockquote>
<h4 id="1-About-Page"><a href="#1-About-Page" class="headerlink" title="1. About Page:"></a>1. About Page:</h4><p>cd to your hexo folder and run this code:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page about</div></pre></td></tr></table></figure>
<h4 id="2-Tags-Cloud-Page"><a href="#2-Tags-Cloud-Page" class="headerlink" title="2. Tags Cloud Page:"></a>2. Tags Cloud Page:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page tags</div></pre></td></tr></table></figure>
<blockquote>
<p>Post with several categories <a href="https://github.com/MOxFIVE/hexo-theme-yelee/issues/4" target="_blank" rel="external">issue#4</a></p>
</blockquote>
<h4 id="3-Background-image"><a href="#3-Background-image" class="headerlink" title="3. Background image:"></a>3. Background image:</h4><p>Find or change background images in folder:</p>
<blockquote>
<p><code>/yelee/source/background/</code></p>
</blockquote>
<p>Setting in <code>themes/yelee/_config.yml</code>:</p>
<p><code>background_image: 5</code></p>
<ul>
<li><p>Default value is 5, free to modify the number</p>
</li>
<li><p>“5”: show 5 images form bg-1.jpg to bg-5.jpg in <code>/yelee/source/background/</code></p>
</li>
<li><p>“0”: remove background image and use white-gray theme</p>
</li>
</ul>
<blockquote>
<p><a href="http://peteschuster.com/2013/01/saving-jpegs-for-the-web-setting-photoshop-up-for-progressive-jpegs/" target="_blank" rel="external">Saving JPEGs for the Web: Setting Photoshop Up for Progressive JPEGs</a></p>
<p>Optimize images with PhotoShop (JPEG, Quality 0, Progressive)</p>
</blockquote>
<h4 id="4-Highlight-Style"><a href="#4-Highlight-Style" class="headerlink" title="4. Highlight Style:"></a>4. Highlight Style:</h4><p>Set inline_code to style highlight text &amp; Chose a highlight theme for code block.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">highlight_style:</div><div class="line">  #on: true</div><div class="line">  inline_code: 1</div><div class="line">  code_block: 1</div></pre></td></tr></table></figure>
<p>Set <code>on: true</code> to enable this feature</p>
<p>highlight theme from <a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="external">https://github.com/chriskempson/tomorrow-theme</a></p>
<h4 id="5-Comment"><a href="#5-Comment" class="headerlink" title="5. Comment:"></a>5. Comment:</h4><p>Disqus, duoshuo and youyan is supported, enable ONE of them in theme’s “_config.yml”.</p>
<h4 id="6-Table-of-Contents"><a href="#6-Table-of-Contents" class="headerlink" title="6. Table of Contents:"></a>6. Table of Contents:</h4><p>Remove toc and the button via putting <code>toc: false</code> before “—“ at [post].md.</p>
<p>Hide toc in default</p>
<blockquote>
<p>Set <code>toc: false</code> in <code>yelee/_config.yml</code>.</p>
</blockquote>
<p>(<em>Set <code>toc: true</code> in front-matter to show it in certain post</em>)</p>
<h4 id="7-Copyright-info"><a href="#7-Copyright-info" class="headerlink" title="7. Copyright info.:"></a>7. Copyright info.:</h4><p>Hide this via putting <code>original: false</code> to post’s front-matter.</p>
<p>Hide Copyright info. in default</p>
<blockquote>
<p>Set <code>copyright: false</code> in <code>yelee/_config.yml</code>.</p>
</blockquote>
<p>(<em>Set <code>original: true</code> in front-matter to show it in certain post</em>)</p>
<h4 id="8-404-Page"><a href="#8-404-Page" class="headerlink" title="8. 404 Page:"></a>8. 404 Page:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo new page 404</div></pre></td></tr></table></figure>
<p>And then set <code>permalink: /404</code> in <code>/source/404/index.md</code> front matter.</p>
<h4 id="9-RSS-Feed"><a href="#9-RSS-Feed" class="headerlink" title="9. RSS Feed:"></a>9. RSS Feed:</h4><p>Install plugin: <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">hexo-generator-feed</a></p>
<h4 id="10-Sitemap-for-SEO"><a href="#10-Sitemap-for-SEO" class="headerlink" title="10. Sitemap for SEO:"></a>10. Sitemap for SEO:</h4><p>Install plugin: <a href="https://github.com/ludoviclefevre/hexo-generator-seo-friendly-sitemap" target="_blank" rel="external">hexo-generator-seo-friendly-sitemap</a></p>
<p>Baidu: <a href="https://github.com/coneycode/hexo-generator-baidu-sitemap" target="_blank" rel="external">hexo-generator-baidu-sitemap</a></p>
<h4 id="11-Apple-Touch-icon"><a href="#11-Apple-Touch-icon" class="headerlink" title="11. Apple Touch icon:"></a>11. Apple Touch icon:</h4><p>The Path is <code>/yelee/source/apple-touch-icon.png</code></p>
<p><a href="https://realfavicongenerator.net/blog/apple-touch-icon-the-good-the-bad-the-ugly/" target="_blank" rel="external">Recommended size: 180*180</a></p>
<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
<h3 id="安装搜索插件"><a href="#安装搜索插件" class="headerlink" title="安装搜索插件"></a>安装搜索插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-generator-search --save</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
  
  
</search>
